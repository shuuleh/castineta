#include "arduino_secrets.h"

#include <ESP8266WiFi.h>



/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/09a255f8-a623-40bb-a70c-570930822c29 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool adelante;
  bool atras;
  bool derecha;
  bool go;
  bool izquierda;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

  #include "thingProperties.h" //define la librerÃ­a
  #define A D0  //defino las salida A
  #define B D1  //defino las salida B
  #define C D2  //defino las salida C
  #define D D3  //defino las salida D
  #define E D5  //defino las salida E
  #define led D4//flag led
  bool bit0;
  bool bit1;
  bool bit2;
  bool bit3;
  bool gogo;
  bool flag;
 
  
void setup() {

  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(100); 
 

    

    bool bit0 = false;
    bool bit1 = false;
    bool bit2 = false;
    bool bit3 = false;
    bool gogo = false;
    bool flag = false;
    
    pinMode(A,OUTPUT);//defino como salidas los terminales para el transmisor
    pinMode(B,OUTPUT);
    pinMode(C,OUTPUT);
    pinMode(D,OUTPUT);
    pinMode(E,OUTPUT);
    pinMode(led,OUTPUT);
    digitalWrite(A,LOW);//pongo las salidas en cero del transmisor
    digitalWrite(B,LOW);
    digitalWrite(C,LOW);
    digitalWrite(D,LOW);
    digitalWrite(led,HIGH);
    digitalWrite(E,HIGH);//esta queda en 1 porque es el TE
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

}

void loop() {
  ArduinoCloud.update();
   // Convertir los bits binarios a cÃ³digo Gray
  int G3 = bit3;
  int G2 = bit3 ^ bit2;
  int G1 = bit2 ^ bit1;
  int G0 = bit1 ^ bit0;

  
  if(gogo){
  // Escribir los bits de cÃ³digo Gray en las salidas
    digitalWrite(A, G0);
    digitalWrite(B, G1);
    digitalWrite(C, G2);
    digitalWrite(D, G3);
    digitalWrite(E,LOW);
    flag = false;
  }else{
    
    digitalWrite(A, LOW);
    digitalWrite(B, LOW);
    digitalWrite(C, LOW);
    digitalWrite(D, LOW);
    flag = true;
     
    
  }
  if(flag){
    delay(50);
    digitalWrite(E,HIGH);
    }else{
    digitalWrite(E,LOW); 
    }    
  // Espera un momento antes de la prÃ³xima lectura
  
  //int power = WiFi.RSSI();
  //Serial.printf("Signal dB %d\n", power);

  //delay(2000);
  // Your code here 
     
      }
    
/*
    
  

/*
  Since Adelante is READ_WRITE variable, onAdelanteChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAdelanteChange()  {
  // Add your code here to act upon Adelante change
  if(adelante){
  bit0 = true;
  }else{
  bit0 = false;
  }
   
}

/*
  Since Atras is READ_WRITE variable, onAtrasChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAtrasChange()  {
  // Add your code here to act upon Atras change
  if(atras){
  bit1 = true;
  }else{
  bit1 = false;}
 

}

/*
  Since Izquierda is READ_WRITE variable, onIzquierdaChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onIzquierdaChange()  {
  // Add your code here to act upon Izquierda change
  if(izquierda){
  bit2 = true;
}else{
  bit2 =false;
}
  
  
}

/*
  Since Derecha is READ_WRITE variable, onDerechaChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onDerechaChange()  {
  // Add your code here to act upon Derecha change
    if(derecha){
    bit3 = true;
    }else{
    bit3 = false;}
    

}


/*
  Since Go is READ_WRITE variable, oe:\proyectos esp8266\semaforo\semaforo.inonGoChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onGoChange()  {//si no esta el go apretado el dato no se envÃ­a entonces puedo considerarlo como el pin que mantiene el dato?
  // Add your code here to act upon Go change

  digitalWrite(led,!go);
  if(go){
    gogo = true;
    }else{
      gogo = false;
    }
   
 
  
}
